import sys
from pathlib import Path
from colorama import init, Fore, Style

init(autoreset=True)

def print_directory_tree(path: Path, prefix: str = "", is_last=True, max_depth=2, current_depth=0):
    if current_depth > max_depth:
        return #–æ–±–º–µ–∂–µ–Ω–Ω—è –¥–æ 2-–≥–æ —Ä—ñ–≤–Ω–Ω—è

    connector = "‚îó " if is_last else "‚î£ "
    folder_icon = "üìÇ"
    file_icon = "üìú"

    if prefix == "":
        print(Fore.BLUE + f"üì¶{path.name}" + Style.RESET_ALL) 
    else:
        if path.is_dir():
            print(prefix + connector + Fore.BLUE + folder_icon + path.name + "/" + Style.RESET_ALL)
        else:
            print(prefix + connector + Fore.GREEN + file_icon + path.name + Style.RESET_ALL) 

    if path.is_dir():
        # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –ø–∞–ø–æ–∫
        ignore_dirs = {'.git', 'venv', '__pycache__'}
        items = sorted(path.iterdir(), key=lambda x: (x.is_file(), x.name.lower())) 
        items = [item for item in items if item.name not in ignore_dirs]

        count = len(items) 
        for index, item in enumerate(items):
            last = (index == count - 1) 
            new_prefix = prefix + ("   " if is_last else "‚îÉ  ") 
            print_directory_tree(item, new_prefix, last, max_depth, current_depth + 1) 

def main(): 
    if len(sys.argv) == 2: 
        dir_path = Path(sys.argv[1])
    else:
        user_input = input(Fore.CYAN + "üîπ –í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: " + Style.RESET_ALL) 
        dir_path = Path(user_input.strip('"').strip())

    if not dir_path.exists(): 
        print(Fore.RED + f"[–ü–æ–º–∏–ª–∫–∞] –®–ª—è—Ö '{dir_path}' –Ω–µ —à—Å–Ω—É—î." + Style.RESET_ALL)
        return
    if not dir_path.is_dir(): 
        print (Fore.RED + f"[–ü–æ–º–∏–ª–∫–∞] –®–ª—è—Ö '{dir_path}' –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é." + Style.RESET_ALL) 

    print(Fore.YELLOW + f"\nüìÅ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {dir_path}\n" + Style.RESET_ALL) 
    print_directory_tree(dir_path) 

if __name__ == "__main__":     
    main() 

# —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: C:\goit-pycore-hw-04\Picture